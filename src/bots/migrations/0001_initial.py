# Generated by Django 5.2.4 on 2025-09-08 17:13

import django.db.models.deletion
import encrypted_model_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Scenario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="название")),
                (
                    "scenario_type",
                    models.CharField(
                        choices=[("CS", "Conversation")],
                        default="CS",
                        max_length=2,
                        verbose_name="Тип сценария",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scenarios",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "сценарий",
                "verbose_name_plural": "сценарии",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Bot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="имя")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="описание"),
                ),
                (
                    "gpt_api_key",
                    encrypted_model_fields.fields.EncryptedCharField(
                        blank=True, null=True, verbose_name="API ключ"
                    ),
                ),
                (
                    "gpt_api_url",
                    models.CharField(
                        choices=[
                            ("https://api.deepseek.com", "deepseek"),
                            ("https://api.openai.com", "openai"),
                            ("https://openrouter.ai/api/v1", "openrouter"),
                        ],
                        default="https://api.deepseek.com",
                        max_length=200,
                        verbose_name="API GPT URL",
                    ),
                ),
                (
                    "ai_model",
                    models.CharField(
                        default="", max_length=200, null=True, verbose_name="ai модель"
                    ),
                ),
                (
                    "telegram_token",
                    encrypted_model_fields.fields.EncryptedCharField(
                        blank=True, null=True, verbose_name="телеграм токен"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="изменен"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="активен"),
                ),
                (
                    "is_running",
                    models.BooleanField(default=False, verbose_name="запущен"),
                ),
                (
                    "last_started",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="время запуска"
                    ),
                ),
                (
                    "last_stopped",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="время остановки"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bots",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="владелец",
                    ),
                ),
                (
                    "current_scenario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bots",
                        to="bots.scenario",
                        verbose_name="текущий сценарий",
                    ),
                ),
            ],
            options={
                "verbose_name": "бот",
                "verbose_name_plural": "боты",
            },
        ),
        migrations.CreateModel(
            name="Step",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="название")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "is_using_ai",
                    models.BooleanField(
                        default=False, verbose_name="Использование запроса к AI"
                    ),
                ),
                (
                    "is_entry_point",
                    models.BooleanField(default=False, verbose_name="Точка входа"),
                ),
                (
                    "is_fallback",
                    models.BooleanField(default=False, verbose_name="шаг по умолчанию"),
                ),
                (
                    "is_end",
                    models.BooleanField(default=False, verbose_name="Конец разговора"),
                ),
                (
                    "on_state",
                    models.CharField(
                        blank=True, default="", verbose_name="Вызывающее состояние"
                    ),
                ),
                (
                    "result_state",
                    models.CharField(
                        blank=True, default="", verbose_name="Выходное сотояние"
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        choices=[
                            ("ST", "start"),
                            ("CL", "clear"),
                            ("HL", "help"),
                            ("SP", "stop"),
                            ("CC", "custom command"),
                            ("QU", "question"),
                        ],
                        default="QU",
                        max_length=2,
                        verbose_name="Шаблон",
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Приоритет"
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Текст сообщения"
                    ),
                ),
                (
                    "handler_data",
                    models.JSONField(
                        default=dict, verbose_name="Настройки для хендлеров"
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="bots.scenario",
                        verbose_name="сценарий",
                    ),
                ),
            ],
            options={
                "verbose_name": "шаг",
                "verbose_name_plural": "шаги",
            },
        ),
        migrations.AddConstraint(
            model_name="scenario",
            constraint=models.UniqueConstraint(
                fields=("owner", "title"), name="unique_scenario_per_owner"
            ),
        ),
        migrations.AddConstraint(
            model_name="bot",
            constraint=models.UniqueConstraint(
                fields=("owner", "name"), name="unique_name_per_owner"
            ),
        ),
        migrations.AddConstraint(
            model_name="step",
            constraint=models.UniqueConstraint(
                fields=("scenario", "title"), name="unique_step_per_scenario"
            ),
        ),
    ]
